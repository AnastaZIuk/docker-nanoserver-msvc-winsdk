name: NanoServer MSVC

on:
  push:
    branches:
      - master
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  run-nanoserver-msvc-winsdk-x64-build:
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Restore Cached WSL Kernel & VHDX
        uses: actions/cache/restore@v4
        id: restore-wsl
        with:
          path: |
            linux/bzImage
            linux/ext4.vhdx
            linux/wsl.msi
          key: wsl-files-${{ runner.os }}-
          restore-keys: |
            wsl-files-${{ runner.os }}-

      - uses: fawazahmed0/action-debug-vscode@main

      - name: Configure WSL
        shell: pwsh
        run: |
          wsl/setup-wsl.ps1

      - name: Build docker image, cache to local registry
        if: env.REGISTRY_CACHE_HIT != 'true'
        shell: pwsh
        run: |
          docker build -t app:latest .
          docker tag app:latest localhost:5000/app:latest
          wsl dockerd &> dockerd-logfile &
          wsl/wait-for-daemon.ps1
          wsl docker run --rm -d -p 5000:5000 --name registry -e REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/registry-data -v "/registry-data:/registry-data" registry:2.8.3
          Invoke-RestMethod -Uri "http://localhost:5000/v2/_catalog" -TimeoutSec 15 | ConvertTo-Json
          docker push localhost:5000/app

      - name: Pull cached docker image from local registry
        if: env.REGISTRY_CACHE_HIT == 'true'
        shell: pwsh
        run: |
          wsl dockerd &> dockerd-logfile &
          wsl/wait-for-daemon.ps1
          wsl docker run --rm -d -p 5000:5000 --name registry -e REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/registry-data -v "/registry-data:/registry-data" registry:2.8.3
          Invoke-RestMethod -Uri "http://localhost:5000/v2/_catalog" -TimeoutSec 15 | ConvertTo-Json
          docker pull --disable-content-trust localhost:5000/app
          
      - name: Run Nano Container
        shell: pwsh
        run: |
          docker run -di --name orphan -v "${{ github.workspace }}:C:\app" app:latest

      - name: Nano Container - Configure CMake Project
        shell: pwsh
        run: |
          docker exec -w "C:\app\tests" -i orphan cmd /c cmake --preset configure-msvc-winsdk

      - name: Nano Container - Build the Project
        shell: pwsh
        run: |
          docker exec -w "C:\app\tests" -i orphan cmd /c cmake --build --preset build-msvc-winsdk --config Release

      - name: Nano Container - Test the Project
        shell: pwsh
        run: |
          docker exec -w "C:\app\tests\build\src" -i orphan cmd /c ctest -C Release --stop-on-failure --verbose

      - name: Shutdown WSL
        shell: pwsh
        run: |
          wsl --shutdown

      - name: Save WSL Kernel & VHDX to Cache
        id: cache-wsl
        uses: actions/cache/save@v4
        with:
          path: |
            linux/bzImage
            linux/ext4.vhdx
            linux/wsl.msi
          key: wsl-files-${{ runner.os }}-
