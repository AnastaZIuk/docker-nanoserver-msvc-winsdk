name: NanoServer MSVC

on:
  push:
    branches:
      - master
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  run-nanoserver-msvc-winsdk-x64-build:
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Restore Image Cache
        uses: actions/cache/restore@v4
        id: restore-buildkit
        with:
          path: |
            buildkit
            
          key: buildkit-${{ runner.os }}-
          restore-keys: |
            buildkit-${{ runner.os }}-

      - name: Setup Buildkit
        shell: pwsh
        run: |
            New-Item -ItemType Directory -Path "buildkit/logs" -Force

            Invoke-WebRequest -Uri "https://github.com/moby/buildkit/releases/download/v0.20.1/buildkit-v0.20.1.windows-amd64.tar.gz" -OutFile "buildkit.tar.gz"
            tar -xf buildkit.tar.gz -C buildkit
            
            Invoke-WebRequest -Uri "https://github.com/containerd/containerd/releases/download/v2.0.4/containerd-2.0.4-windows-amd64.tar.gz" -OutFile "containerd.tar.gz"
            tar -xf containerd.tar.gz -C buildkit

            $Bin = "${{ github.workspace }}\buildkit\bin"
            echo "PATH=$Bin;$env:PATH" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8

      - name: Run daemons
        shell: pwsh
        run: |    
            function Wait-For {
                param (
                    [string]$Command,          # Command to run
                    [int]$TickWait = 1,        # Wait time between retries (seconds) [Default: 1s]
                    [int]$TotalTicks = 5       # Maximum retries before failure [Default: 5 retries]
                )
          
                Write-Host "⏳ Waiting for command: $Command (Max retries: $TotalTicks, Interval: ${TickWait}s)"
                
                for ($i=1; $i -le $TotalTicks; $i++) {
                    if (Invoke-Expression $Command) {
                        Write-Host "✅ Success: $Command"
                        return $true
                    }
                    Start-Sleep -Seconds $TickWait
                }
          
                Write-Error "❌ Timeout: $Command did not succeed in $TotalTicks ticks (tick = $TickWait s)"
                exit 1
            }

            Start-Process containerd.exe `
              -RedirectStandardOutput "buildkit/logs/containerd.log" `
              -RedirectStandardError "buildkit/logs/containerd_error.log" `
              -NoNewWindow -PassThru

            Wait-For "ctr --namespace buildkit image ls"

      - uses: fawazahmed0/action-debug-vscode@main
            
      - name: Save Image Cache
        id: cache-buildkit
        uses: actions/cache/save@v4
        with:
          path: |
            buildkit
          key: buildkit-${{ runner.os }}-
